#File: ObstacleAvoidance.fll
Engine: ObstacleAvoidance
InputVariable: goal_distance
  enabled: true
  range: 0.000 10.000
  lock-range: false
  term: near Ramp 5.000 0.000
  term: medium Triangle 0.000 5.000 10.000
  term: far Ramp 5.000 10.000
InputVariable: goal_angle
  enabled: true
  range: -3.141 3.141
  lock-range: false
  term: left Ramp 0.000 -3.141
  term: center Triangle -1.571 0.000 1.571
  term: right Ramp 0.000 3.141
InputVariable: ob_range
  enabled: true
  range: 0.000 10.000
  lock-range: false
  term: near Ramp 0.500 0.000
  term: medium Triangle 0.250 2.000 3.750
  term: far Ramp 3.500 4.000
InputVariable: ob_angle
  enabled: true
  range: -0.500 0.500
  lock-range: false
  term: left Ramp 0.000 -0.500
  term: center Triangle -0.250 0.000 0.250
  term: right Ramp 0.000 0.500
OutputVariable: mSteer
  enabled: true
  range: -0.600 0.600
  lock-range: false
  aggregation: Maximum
  defuzzifier: Centroid 100
  default: nan
  lock-previous: false
  term: right Ramp -0.100 -0.600
  term: unchanged Trapezoid -0.200 -0.250 0.250 0.200
  term: left Ramp 0.100 0.600
OutputVariable: mSpeed
  enabled: true
  range: -0.100 1.200
  lock-range: false
  aggregation: Maximum
  defuzzifier: Centroid 100
  default: nan
  lock-previous: false
  term: normal Trapezoid 0.100 0.300 0.500 0.700
  term: slow Ramp 0.200 0.000
  term: fast Ramp 0.600 1.200
RuleBlock: mamdani
  enabled: true
  conjunction: AlgebraicProduct
  disjunction: none
  implication: AlgebraicProduct
  activation: General
  rule: if ob_range is far then mSpeed is fast
  rule: if ob_range is near then mSpeed is slow
  rule: if ob_range is medium then mSpeed is normal
  rule: if ob_angle is left then mSteer is right
  rule: if ob_angle is right then mSteer is left
  
  rule: if ob_angle is right and ob_range is near then mSteer is left
  rule: if ob_angle is left and ob_range is near then mSteer is right
  #rule: if ob_angle is right and ob_range is far then mSteer is unchanged
  #rule: if ob_angle is left and ob_range is far then mSteer is unchanged
  #rule: if ob_angle is right and ob_range is medium then mSteer is unchanged
  #rule: if ob_angle is left and ob_range is medium then mSteer is unchanged

  #rule: if goal_distance is far then mSpeed is fast
  rule: if goal_distance is near then mSpeed is slow
  #rule: if goal_distance is medium then mSpeed is normal

  rule: if goal_angle is left then mSteer is left
  rule: if goal_angle is right then mSteer is right
  rule: if goal_angle is center then mSteer is unchanged

  rule: if goal_angle is left and ob_angle is center then mSteer is left
  rule: if goal_angle is right and ob_angle is center then mSteer is right